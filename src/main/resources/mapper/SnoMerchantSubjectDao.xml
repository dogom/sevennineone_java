<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.gfang.sevennineone.dao.SnoMerchantSubjectDao">

	<select id="getById" resultType="com.gfang.sevennineone.model.po.SnoMerchantSubjectPO">
		select `id`,`user_id`,`merchant_id`,`teacher_id`,`name`,`start_date`,`end_date`,`start_time`,`end_time`,`during`,`price`,`total`,`real_students`,`max_students`,`suitable_age`,`adv_img`,`status`,`rate_type`,`rate_num`,`description`,`create_time`,`is_delete` from sno_merchant_subject where id = #{value} and is_delete = 0
	</select>

	<sql id="filed">
		`id`,`user_id` userId,`merchant_id` merchantId,`teacher_id` teacherId,`name`,`start_date` startDate,`end_date` endDate,`start_time` startTime,`end_time` endTime,
		`during`,`price`,`total`,`real_students` realStudents,`max_students` maxStudents,`suitable_age` suitableAge,`adv_img` advImg,`status`,`rate_type` rateType,
		`rate_num` rateNum,`description`,`create_time` createTime
	</sql>
	 
	<insert id="save" parameterType="com.gfang.sevennineone.model.po.SnoMerchantSubjectPO" useGeneratedKeys="true" keyProperty="id">
		insert into sno_merchant_subject
		(
			`user_id`, 
			`merchant_id`, 
			`teacher_id`, 
			`name`, 
			`start_date`, 
			`end_date`, 
			`start_time`, 
			`end_time`, 
			`during`, 
			`price`,
			`total`,
			`max_students`,
			`real_students`,
			`suitable_age`,
			`adv_img`, 
			`status`, 
			`rate_type`, 
			`rate_num`, 
			`description`
		)
		values
		(
			#{userId}, 
			#{merchantId}, 
			#{teacherId}, 
			#{name}, 
			#{startDate}, 
			#{endDate}, 
			#{startTime}, 
			#{endTime}, 
			#{during}, 
			#{price},
			#{total},
			#{maxStudents},
			#{realStudents},
			#{suitableAge},
			#{advImg}, 
			#{status}, 
			#{rateType}, 
			#{rateNum}, 
			#{description}
		)
	</insert>
	 
	<update id="update" parameterType="com.gfang.sevennineone.model.po.SnoMerchantSubjectPO">
		update sno_merchant_subject 
		<set>
			<if test="userId != null and userId!=''">`user_id` = #{userId}, </if>
			<if test="merchantId != null">`merchant_id` = #{merchantId}, </if>
			<if test="teacherId != null">`teacher_id` = #{teacherId}, </if>
			<if test="startDate != null">`start_date` = #{startDate}, </if>
			<if test="endDate != null">`end_date` = #{endDate}, </if>
			<if test="startTime != null">`start_time` = #{startTime}, </if>
			<if test="endTime != null">`end_time` = #{endTime}, </if>
			<if test="during != null">`during` = #{during}, </if>
			<if test="total != null">`total` = #{total}, </if>
			<if test="maxStudents != null">`max_students` = #{maxStudents}, </if>
			<if test="realStudents != null">`real_students` = #{realStudents}, </if>
			<if test="suitableAge != null">`suitable_age` = #{suitableAge}, </if>
			<if test="advImg != null and advImg!=''">`adv_img` = #{advImg}, </if>
			<if test="rateType != null">`rate_type` = #{rateType}, </if>
			<if test="rateNum != null">`rate_num` = #{rateNum}, </if>
			<if test="description != null">`description` = #{description}, </if>
		</set>
		where id = #{id}
	</update>

	<select id="listSubject" resultType="hashMap" parameterType="Integer">
		select `id`,`user_id`,`merchant_id`,`teacher_id`,`name`,`start_date`,`end_date`,`start_time`,`end_time`,`during`,`price`,`total`,`max_students`,`real_students`,`suitable_age`,`adv_img`,`rate_type`,`rate_num`,`description`
		from sno_merchant_subject
		 where merchant_id = #{merchantId} and status = 1 and is_delete = 0
	</select>

	<update id="updateRealStudentAddOne">
		update sno_merchant_subject
		set real_students = real_students + 1
		where id = #{value}
	</update>


	<insert id="saveBatch" parameterType="list" useGeneratedKeys="true" keyProperty="id">
		insert into sno_merchant_subject (
			`user_id`,
			`merchant_id`,
			`teacher_id`,
			`name`,
			`start_date`,
			`end_date`,
			`start_time`,
			`end_time`,
			`during`,
			`price`,
			`total`,
			`max_students`,
			`real_students`,
			`suitable_age`,
			`adv_img`,
			`status`,
			`rate_type`,
			`rate_num`,
			`description`
		) values
		<foreach collection ="list" item="item" index= "index" separator =",">
			(
			#{item.userId},
			#{item.merchantId},
			#{item.teacherId},
			#{item.name},
			#{item.startDate},
			#{item.endDate},
			#{item.startTime},
			#{item.endTime},
			#{item.during},
			#{item.price},
			#{item.total},
			#{item.maxStudents},
			#{item.realStudents},
			#{item.suitableAge},
			#{item.advImg},
			#{item.status},
			#{item.rateType},
			#{item.rateNum},
			#{item.description}
			)
		</foreach >
	</insert>

	<select id="listByUserId" resultType="hashMap">
		select
		<include refid="filed" />
		from sno_merchant_subject
		where user_id = #{id}
		and status = 1 and is_delete = 0
	</select>

	<update id="deleteBatchByMerchantId" >
		update sno_merchant_subject
		set is_delete = 1
		where merchant_id = #{value}
	</update>

	<select id="listByMerchantIds" resultType="com.gfang.sevennineone.model.po.SnoMerchantSubjectPO">
		select
		<include refid="filed" />
		from sno_merchant_subject
		where merchant_id in
		<foreach collection="array" item="id" index="index" open="(" close=")" separator=",">
			#{id}
		</foreach>
	</select>
</mapper>